===== Messages =====
Warning: Non terminal "tab" has no production
Warning: Non terminal "tpair" was declared but never used
Info: Delete file : C:\Users\XPS\eclipse-workspace\fr.uha.montivincent.jcupnflex.sample.calculator\src\fr\uha\montivincent\jcupnflex\sample\calculator\reader\ETerminal.java
Info: Delete file : C:\Users\XPS\eclipse-workspace\fr.uha.montivincent.jcupnflex.sample.calculator\src\fr\uha\montivincent\jcupnflex\sample\calculator\reader\ENonterminal.java
Info: Delete file : C:\Users\XPS\eclipse-workspace\fr.uha.montivincent.jcupnflex.sample.calculator\src\fr\uha\montivincent\jcupnflex\sample\calculator\reader\Parser.java
Info: Delete file : C:\Users\XPS\eclipse-workspace\fr.uha.montivincent.jcupnflex.sample.calculator\src\fr\uha\montivincent\jcupnflex\sample\calculator\reader\Parser.dump
Warning: *** Shift/Reduce conflict found in state #8
  between compositekey ::= simplekey (*)
  and     array ::= simplekey (*) __REGEXP_1__ pairarray 
  and     pairkeyval ::= key (*) __REGEXP_1__ value 
  under symbol __REGEXP_1__[4]
  Resolved in favor of shifting.

Info: Generate Terminal file : C:\Users\XPS\eclipse-workspace\fr.uha.montivincent.jcupnflex.sample.calculator\src\fr\uha\montivincent\jcupnflex\sample\calculator\reader\ETerminal.java
Info: Generate Nonterminal file : C:\Users\XPS\eclipse-workspace\fr.uha.montivincent.jcupnflex.sample.calculator\src\fr\uha\montivincent\jcupnflex\sample\calculator\reader\ENonterminal.java
Info: Generate Parser file : C:\Users\XPS\eclipse-workspace\fr.uha.montivincent.jcupnflex.sample.calculator\src\fr\uha\montivincent\jcupnflex\sample\calculator\reader\Parser.java
Info: Generate Dump file : C:\Users\XPS\eclipse-workspace\fr.uha.montivincent.jcupnflex.sample.calculator\src\fr\uha\montivincent\jcupnflex\sample\calculator\reader\Parser.dump
===== Terminals =====
[0]error [1]EOF [2]OOA [3]EOLN 
[4]__REGEXP_1__ [5]__REGEXP_2__ [6]__REGEXP_3__ [7]__REGEXP_4__ 
[8]BOOLEAN<Boolean> [9]DOUBLE<Float> [10]INTEGER<Integer> [11]COMMA<String> 
[12]COMMENT<String> [13]DATE<String> [14]QTDSTR<String> [15]TIME<String> 
[16]UNQTDSTR<String> 

===== Non terminals =====
[0]array [1]document [2]input [3]myarrVals 
[4]pairarray [5]pairkeyval [6]tab [7]tpair 
[8]compositekey<Object> [9]key<Object> [10]simplekey<Object> [11]value<Object> 
[0]$START<Object> [13]input$0_many [14]$parenthesis1 [15]$parenthesis1$0_many 


===== Productions =====
[0] $START ::= document EOF 
[1] array ::= simplekey __REGEXP_1__ pairarray 
[2] compositekey ::= simplekey __REGEXP_2__ compositekey 
[3] compositekey ::= simplekey 
[4] document ::= input$0_many 
[5] input ::= pairkeyval 
[6] input ::= tab 
[7] input ::= array 
[8] input ::= COMMENT 
[9] input ::= EOLN 
[10] key ::= simplekey 
[11] key ::= compositekey 
[12] myarrVals ::= value 
[13] $parenthesis1 ::= COMMA myarrVals 
[14] pairarray ::= __REGEXP_3__ value $parenthesis1$0_many __REGEXP_4__ 
[15] pairkeyval ::= key __REGEXP_1__ value 
[16] simplekey ::= QTDSTR 
[17] simplekey ::= UNQTDSTR 
[18] value ::= QTDSTR 
[19] value ::= BOOLEAN 
[20] value ::= INTEGER 
[21] value ::= DOUBLE 
[22] value ::= DATE 
[23] value ::= TIME 
[24] input$0_many ::= 
[25] input$0_many ::= input$0_many input 
[26] $parenthesis1$0_many ::= 
[27] $parenthesis1$0_many ::= $parenthesis1$0_many $parenthesis1 

===== Viable Prefix Recognizer =====
lalr_state [0]: {
  [$START ::= (*) document EOF , {EOF[1]}]
  [document ::= (*) input$0_many , {EOF[1]}]
  [input$0_many ::= (*) , {EOF[1], EOLN[3], COMMENT<String>[12], QTDSTR<String>[14], UNQTDSTR<String>[16]}]
  [input$0_many ::= (*) input$0_many input , {EOF[1], EOLN[3], COMMENT<String>[12], QTDSTR<String>[14], UNQTDSTR<String>[16]}]
}
transition on input$0_many to state [2]
transition on document to state [1]

-------------------
lalr_state [1]: {
  [$START ::= document (*) EOF , {EOF[1]}]
}
transition on EOF to state [3]

-------------------
lalr_state [2]: {
  [$START ::= document (*) EOF , {EOF[1]}]
  [input$0_many ::= input$0_many (*) input , {EOF[1], EOLN[3], COMMENT<String>[12], QTDSTR<String>[14], UNQTDSTR<String>[16]}]
  [array ::= (*) simplekey __REGEXP_1__ pairarray , {EOF[1], EOLN[3], COMMENT<String>[12], QTDSTR<String>[14], UNQTDSTR<String>[16]}]
  [compositekey ::= (*) simplekey __REGEXP_2__ compositekey , {__REGEXP_1__[4]}]
  [compositekey ::= (*) simplekey , {__REGEXP_1__[4]}]
  [input ::= (*) pairkeyval , {EOF[1], EOLN[3], COMMENT<String>[12], QTDSTR<String>[14], UNQTDSTR<String>[16]}]
  [input ::= (*) tab , {EOF[1], EOLN[3], COMMENT<String>[12], QTDSTR<String>[14], UNQTDSTR<String>[16]}]
  [input ::= (*) array , {EOF[1], EOLN[3], COMMENT<String>[12], QTDSTR<String>[14], UNQTDSTR<String>[16]}]
  [input ::= (*) COMMENT , {EOF[1], EOLN[3], COMMENT<String>[12], QTDSTR<String>[14], UNQTDSTR<String>[16]}]
  [input ::= (*) EOLN , {EOF[1], EOLN[3], COMMENT<String>[12], QTDSTR<String>[14], UNQTDSTR<String>[16]}]
  [key ::= (*) simplekey , {__REGEXP_1__[4]}]
  [key ::= (*) compositekey , {__REGEXP_1__[4]}]
  [pairkeyval ::= (*) key __REGEXP_1__ value , {EOF[1], EOLN[3], COMMENT<String>[12], QTDSTR<String>[14], UNQTDSTR<String>[16]}]
  [simplekey ::= (*) QTDSTR , {__REGEXP_1__[4], __REGEXP_2__[5]}]
  [simplekey ::= (*) UNQTDSTR , {__REGEXP_1__[4], __REGEXP_2__[5]}]
}
transition on simplekey to state [8]
transition on key to state [7]
transition on compositekey to state [7]
transition on tab to state [4]
transition on pairkeyval to state [4]
transition on input to state [4]
transition on array to state [4]
transition on UNQTDSTR to state [6]
transition on QTDSTR to state [5]
transition on COMMENT to state [4]
transition on EOLN to state [4]
transition on EOF to state [3]

-------------------
lalr_state [3]: {
  [$START ::= document EOF (*) , {EOF[1]}]
}

-------------------
lalr_state [4]: {
  [input$0_many ::= input$0_many input (*) , {EOF[1], EOLN[3], COMMENT<String>[12], QTDSTR<String>[14], UNQTDSTR<String>[16]}]
}

-------------------
lalr_state [5]: {
  [simplekey ::= QTDSTR (*) , {__REGEXP_1__[4], __REGEXP_2__[5]}]
}

-------------------
lalr_state [6]: {
  [simplekey ::= UNQTDSTR (*) , {__REGEXP_1__[4], __REGEXP_2__[5]}]
}

-------------------
lalr_state [7]: {
  [pairkeyval ::= key (*) __REGEXP_1__ value , {EOF[1], EOLN[3], COMMENT<String>[12], QTDSTR<String>[14], UNQTDSTR<String>[16]}]
}
transition on __REGEXP_1__ to state [9]

-------------------
lalr_state [8]: {
  [array ::= simplekey (*) __REGEXP_1__ pairarray , {EOF[1], EOLN[3], COMMENT<String>[12], QTDSTR<String>[14], UNQTDSTR<String>[16]}]
  [compositekey ::= simplekey (*) __REGEXP_2__ compositekey , {__REGEXP_1__[4]}]
  [compositekey ::= simplekey (*) , {__REGEXP_1__[4]}]
  [pairkeyval ::= key (*) __REGEXP_1__ value , {EOF[1], EOLN[3], COMMENT<String>[12], QTDSTR<String>[14], UNQTDSTR<String>[16]}]
}
transition on __REGEXP_2__ to state [11]
transition on __REGEXP_1__ to state [10]

-------------------
lalr_state [9]: {
  [pairkeyval ::= key __REGEXP_1__ (*) value , {EOF[1], EOLN[3], COMMENT<String>[12], QTDSTR<String>[14], UNQTDSTR<String>[16]}]
  [value ::= (*) QTDSTR , {EOF[1], EOLN[3], COMMENT<String>[12], QTDSTR<String>[14], UNQTDSTR<String>[16]}]
  [value ::= (*) BOOLEAN , {EOF[1], EOLN[3], COMMENT<String>[12], QTDSTR<String>[14], UNQTDSTR<String>[16]}]
  [value ::= (*) INTEGER , {EOF[1], EOLN[3], COMMENT<String>[12], QTDSTR<String>[14], UNQTDSTR<String>[16]}]
  [value ::= (*) DOUBLE , {EOF[1], EOLN[3], COMMENT<String>[12], QTDSTR<String>[14], UNQTDSTR<String>[16]}]
  [value ::= (*) DATE , {EOF[1], EOLN[3], COMMENT<String>[12], QTDSTR<String>[14], UNQTDSTR<String>[16]}]
  [value ::= (*) TIME , {EOF[1], EOLN[3], COMMENT<String>[12], QTDSTR<String>[14], UNQTDSTR<String>[16]}]
}
transition on value to state [18]
transition on TIME to state [17]
transition on QTDSTR to state [16]
transition on DATE to state [15]
transition on INTEGER to state [14]
transition on DOUBLE to state [13]
transition on BOOLEAN to state [12]

-------------------
lalr_state [10]: {
  [array ::= simplekey __REGEXP_1__ (*) pairarray , {EOF[1], EOLN[3], COMMENT<String>[12], QTDSTR<String>[14], UNQTDSTR<String>[16]}]
  [pairkeyval ::= key __REGEXP_1__ (*) value , {EOF[1], EOLN[3], COMMENT<String>[12], QTDSTR<String>[14], UNQTDSTR<String>[16]}]
  [pairarray ::= (*) __REGEXP_3__ value $parenthesis1$0_many __REGEXP_4__ , {EOF[1], EOLN[3], COMMENT<String>[12], QTDSTR<String>[14], UNQTDSTR<String>[16]}]
  [value ::= (*) QTDSTR , {EOF[1], EOLN[3], COMMENT<String>[12], QTDSTR<String>[14], UNQTDSTR<String>[16]}]
  [value ::= (*) BOOLEAN , {EOF[1], EOLN[3], COMMENT<String>[12], QTDSTR<String>[14], UNQTDSTR<String>[16]}]
  [value ::= (*) INTEGER , {EOF[1], EOLN[3], COMMENT<String>[12], QTDSTR<String>[14], UNQTDSTR<String>[16]}]
  [value ::= (*) DOUBLE , {EOF[1], EOLN[3], COMMENT<String>[12], QTDSTR<String>[14], UNQTDSTR<String>[16]}]
  [value ::= (*) DATE , {EOF[1], EOLN[3], COMMENT<String>[12], QTDSTR<String>[14], UNQTDSTR<String>[16]}]
  [value ::= (*) TIME , {EOF[1], EOLN[3], COMMENT<String>[12], QTDSTR<String>[14], UNQTDSTR<String>[16]}]
}
transition on value to state [18]
transition on pairarray to state [20]
transition on TIME to state [17]
transition on QTDSTR to state [16]
transition on DATE to state [15]
transition on INTEGER to state [14]
transition on DOUBLE to state [13]
transition on BOOLEAN to state [12]
transition on __REGEXP_3__ to state [19]

-------------------
lalr_state [11]: {
  [compositekey ::= simplekey __REGEXP_2__ (*) compositekey , {__REGEXP_1__[4]}]
  [compositekey ::= (*) simplekey __REGEXP_2__ compositekey , {__REGEXP_1__[4]}]
  [compositekey ::= (*) simplekey , {__REGEXP_1__[4]}]
  [simplekey ::= (*) QTDSTR , {__REGEXP_1__[4], __REGEXP_2__[5]}]
  [simplekey ::= (*) UNQTDSTR , {__REGEXP_1__[4], __REGEXP_2__[5]}]
}
transition on simplekey to state [22]
transition on compositekey to state [21]
transition on UNQTDSTR to state [6]
transition on QTDSTR to state [5]

-------------------
lalr_state [12]: {
  [value ::= BOOLEAN (*) , {EOF[1], EOLN[3], __REGEXP_4__[7], COMMA<String>[11], COMMENT<String>[12], QTDSTR<String>[14], UNQTDSTR<String>[16]}]
}

-------------------
lalr_state [13]: {
  [value ::= DOUBLE (*) , {EOF[1], EOLN[3], __REGEXP_4__[7], COMMA<String>[11], COMMENT<String>[12], QTDSTR<String>[14], UNQTDSTR<String>[16]}]
}

-------------------
lalr_state [14]: {
  [value ::= INTEGER (*) , {EOF[1], EOLN[3], __REGEXP_4__[7], COMMA<String>[11], COMMENT<String>[12], QTDSTR<String>[14], UNQTDSTR<String>[16]}]
}

-------------------
lalr_state [15]: {
  [value ::= DATE (*) , {EOF[1], EOLN[3], __REGEXP_4__[7], COMMA<String>[11], COMMENT<String>[12], QTDSTR<String>[14], UNQTDSTR<String>[16]}]
}

-------------------
lalr_state [16]: {
  [value ::= QTDSTR (*) , {EOF[1], EOLN[3], __REGEXP_4__[7], COMMA<String>[11], COMMENT<String>[12], QTDSTR<String>[14], UNQTDSTR<String>[16]}]
}

-------------------
lalr_state [17]: {
  [value ::= TIME (*) , {EOF[1], EOLN[3], __REGEXP_4__[7], COMMA<String>[11], COMMENT<String>[12], QTDSTR<String>[14], UNQTDSTR<String>[16]}]
}

-------------------
lalr_state [18]: {
  [pairkeyval ::= key __REGEXP_1__ value (*) , {EOF[1], EOLN[3], COMMENT<String>[12], QTDSTR<String>[14], UNQTDSTR<String>[16]}]
}

-------------------
lalr_state [19]: {
  [pairarray ::= __REGEXP_3__ (*) value $parenthesis1$0_many __REGEXP_4__ , {EOF[1], EOLN[3], COMMENT<String>[12], QTDSTR<String>[14], UNQTDSTR<String>[16]}]
  [value ::= (*) QTDSTR , {__REGEXP_4__[7], COMMA<String>[11]}]
  [value ::= (*) BOOLEAN , {__REGEXP_4__[7], COMMA<String>[11]}]
  [value ::= (*) INTEGER , {__REGEXP_4__[7], COMMA<String>[11]}]
  [value ::= (*) DOUBLE , {__REGEXP_4__[7], COMMA<String>[11]}]
  [value ::= (*) DATE , {__REGEXP_4__[7], COMMA<String>[11]}]
  [value ::= (*) TIME , {__REGEXP_4__[7], COMMA<String>[11]}]
}
transition on value to state [23]
transition on TIME to state [17]
transition on QTDSTR to state [16]
transition on DATE to state [15]
transition on INTEGER to state [14]
transition on DOUBLE to state [13]
transition on BOOLEAN to state [12]

-------------------
lalr_state [20]: {
  [array ::= simplekey __REGEXP_1__ pairarray (*) , {EOF[1], EOLN[3], COMMENT<String>[12], QTDSTR<String>[14], UNQTDSTR<String>[16]}]
}

-------------------
lalr_state [21]: {
  [compositekey ::= simplekey __REGEXP_2__ compositekey (*) , {__REGEXP_1__[4]}]
}

-------------------
lalr_state [22]: {
  [compositekey ::= simplekey (*) __REGEXP_2__ compositekey , {__REGEXP_1__[4]}]
  [compositekey ::= simplekey (*) , {__REGEXP_1__[4]}]
}
transition on __REGEXP_2__ to state [11]

-------------------
lalr_state [23]: {
  [pairarray ::= __REGEXP_3__ value (*) $parenthesis1$0_many __REGEXP_4__ , {EOF[1], EOLN[3], COMMENT<String>[12], QTDSTR<String>[14], UNQTDSTR<String>[16]}]
  [$parenthesis1$0_many ::= (*) , {__REGEXP_4__[7], COMMA<String>[11]}]
  [$parenthesis1$0_many ::= (*) $parenthesis1$0_many $parenthesis1 , {__REGEXP_4__[7], COMMA<String>[11]}]
}
transition on $parenthesis1$0_many to state [24]

-------------------
lalr_state [24]: {
  [pairarray ::= __REGEXP_3__ value $parenthesis1$0_many (*) __REGEXP_4__ , {EOF[1], EOLN[3], COMMENT<String>[12], QTDSTR<String>[14], UNQTDSTR<String>[16]}]
  [$parenthesis1$0_many ::= $parenthesis1$0_many (*) $parenthesis1 , {__REGEXP_4__[7], COMMA<String>[11]}]
  [$parenthesis1 ::= (*) COMMA myarrVals , {__REGEXP_4__[7], COMMA<String>[11]}]
}
transition on $parenthesis1 to state [27]
transition on COMMA to state [26]
transition on __REGEXP_4__ to state [25]

-------------------
lalr_state [25]: {
  [pairarray ::= __REGEXP_3__ value $parenthesis1$0_many __REGEXP_4__ (*) , {EOF[1], EOLN[3], COMMENT<String>[12], QTDSTR<String>[14], UNQTDSTR<String>[16]}]
}

-------------------
lalr_state [26]: {
  [$parenthesis1 ::= COMMA (*) myarrVals , {__REGEXP_4__[7], COMMA<String>[11]}]
  [myarrVals ::= (*) value , {__REGEXP_4__[7], COMMA<String>[11]}]
  [value ::= (*) QTDSTR , {__REGEXP_4__[7], COMMA<String>[11]}]
  [value ::= (*) BOOLEAN , {__REGEXP_4__[7], COMMA<String>[11]}]
  [value ::= (*) INTEGER , {__REGEXP_4__[7], COMMA<String>[11]}]
  [value ::= (*) DOUBLE , {__REGEXP_4__[7], COMMA<String>[11]}]
  [value ::= (*) DATE , {__REGEXP_4__[7], COMMA<String>[11]}]
  [value ::= (*) TIME , {__REGEXP_4__[7], COMMA<String>[11]}]
}
transition on value to state [29]
transition on myarrVals to state [28]
transition on TIME to state [17]
transition on QTDSTR to state [16]
transition on DATE to state [15]
transition on INTEGER to state [14]
transition on DOUBLE to state [13]
transition on BOOLEAN to state [12]

-------------------
lalr_state [27]: {
  [$parenthesis1$0_many ::= $parenthesis1$0_many $parenthesis1 (*) , {__REGEXP_4__[7], COMMA<String>[11]}]
}

-------------------
lalr_state [28]: {
  [$parenthesis1 ::= COMMA myarrVals (*) , {__REGEXP_4__[7], COMMA<String>[11]}]
}

-------------------
lalr_state [29]: {
  [myarrVals ::= value (*) , {__REGEXP_4__[7], COMMA<String>[11]}]
}

-------------------
-------- ACTION_TABLE --------
From state #0
 [default:ERROR]
 [term 1:REDUCE(16)] [term 3:REDUCE(16)]
 [term 12:REDUCE(16)] [term 14:REDUCE(16)]
 [term 16:REDUCE(16)]
From state #1
 [default:ERROR]
 [term 1:SHIFT(3)]
From state #2
 [default:ERROR]
 [term 1:SHIFT(3)] [term 3:SHIFT(4)]
 [term 12:SHIFT(4)] [term 14:SHIFT(5)]
 [term 16:SHIFT(6)]
From state #3
 [default:ERROR]
 [term 1:REDUCE(0)]
From state #4
 [default:ERROR]
 [term 1:REDUCE(17)] [term 3:REDUCE(17)]
 [term 12:REDUCE(17)] [term 14:REDUCE(17)]
 [term 16:REDUCE(17)]
From state #5
 [default:ERROR]
 [term 4:REDUCE(8)] [term 5:REDUCE(8)]
From state #6
 [default:ERROR]
 [term 4:REDUCE(9)] [term 5:REDUCE(9)]
From state #7
 [default:ERROR]
 [term 4:SHIFT(9)]
From state #8
 [default:ERROR]
 [term 4:SHIFT(10)] [term 5:SHIFT(11)]
From state #9
 [default:ERROR]
 [term 8:SHIFT(12)] [term 9:SHIFT(13)]
 [term 10:SHIFT(14)] [term 13:SHIFT(15)]
 [term 14:SHIFT(16)] [term 15:SHIFT(17)]
From state #10
 [default:ERROR]
 [term 6:SHIFT(19)] [term 8:SHIFT(12)]
 [term 9:SHIFT(13)] [term 10:SHIFT(14)]
 [term 13:SHIFT(15)] [term 14:SHIFT(16)]
 [term 15:SHIFT(17)]
From state #11
 [default:ERROR]
 [term 14:SHIFT(5)] [term 16:SHIFT(6)]
From state #12
 [default:ERROR]
 [term 1:REDUCE(11)] [term 3:REDUCE(11)]
 [term 7:REDUCE(11)] [term 11:REDUCE(11)]
 [term 12:REDUCE(11)] [term 14:REDUCE(11)]
 [term 16:REDUCE(11)]
From state #13
 [default:ERROR]
 [term 1:REDUCE(13)] [term 3:REDUCE(13)]
 [term 7:REDUCE(13)] [term 11:REDUCE(13)]
 [term 12:REDUCE(13)] [term 14:REDUCE(13)]
 [term 16:REDUCE(13)]
From state #14
 [default:ERROR]
 [term 1:REDUCE(12)] [term 3:REDUCE(12)]
 [term 7:REDUCE(12)] [term 11:REDUCE(12)]
 [term 12:REDUCE(12)] [term 14:REDUCE(12)]
 [term 16:REDUCE(12)]
From state #15
 [default:ERROR]
 [term 1:REDUCE(14)] [term 3:REDUCE(14)]
 [term 7:REDUCE(14)] [term 11:REDUCE(14)]
 [term 12:REDUCE(14)] [term 14:REDUCE(14)]
 [term 16:REDUCE(14)]
From state #16
 [default:ERROR]
 [term 1:REDUCE(10)] [term 3:REDUCE(10)]
 [term 7:REDUCE(10)] [term 11:REDUCE(10)]
 [term 12:REDUCE(10)] [term 14:REDUCE(10)]
 [term 16:REDUCE(10)]
From state #17
 [default:ERROR]
 [term 1:REDUCE(15)] [term 3:REDUCE(15)]
 [term 7:REDUCE(15)] [term 11:REDUCE(15)]
 [term 12:REDUCE(15)] [term 14:REDUCE(15)]
 [term 16:REDUCE(15)]
From state #18
 [default:ERROR]
 [term 1:REDUCE(7)] [term 3:REDUCE(7)]
 [term 12:REDUCE(7)] [term 14:REDUCE(7)]
 [term 16:REDUCE(7)]
From state #19
 [default:ERROR]
 [term 8:SHIFT(12)] [term 9:SHIFT(13)]
 [term 10:SHIFT(14)] [term 13:SHIFT(15)]
 [term 14:SHIFT(16)] [term 15:SHIFT(17)]
From state #20
 [default:ERROR]
 [term 1:REDUCE(1)] [term 3:REDUCE(1)]
 [term 12:REDUCE(1)] [term 14:REDUCE(1)]
 [term 16:REDUCE(1)]
From state #21
 [default:ERROR]
 [term 4:REDUCE(2)]
From state #22
 [default:ERROR]
 [term 4:REDUCE(3)] [term 5:SHIFT(11)]
From state #23
 [default:ERROR]
 [term 7:REDUCE(18)] [term 11:REDUCE(18)]
From state #24
 [default:ERROR]
 [term 7:SHIFT(25)] [term 11:SHIFT(26)]
From state #25
 [default:ERROR]
 [term 1:REDUCE(6)] [term 3:REDUCE(6)]
 [term 12:REDUCE(6)] [term 14:REDUCE(6)]
 [term 16:REDUCE(6)]
From state #26
 [default:ERROR]
 [term 8:SHIFT(12)] [term 9:SHIFT(13)]
 [term 10:SHIFT(14)] [term 13:SHIFT(15)]
 [term 14:SHIFT(16)] [term 15:SHIFT(17)]
From state #27
 [default:ERROR]
 [term 7:REDUCE(19)] [term 11:REDUCE(19)]
From state #28
 [default:ERROR]
 [term 7:REDUCE(5)] [term 11:REDUCE(5)]
From state #29
 [default:ERROR]
 [term 7:REDUCE(4)] [term 11:REDUCE(4)]
------------------------------
-------- REDUCE_TABLE --------
From state #0
 [non term 1->state 1] [non term 13->state 2]
From state #1
From state #2
 [non term 0->state 4] [non term 2->state 4] [non term 5->state 4]
 [non term 6->state 4] [non term 8->state 7] [non term 9->state 7]
 [non term 10->state 8]
From state #3
From state #4
From state #5
From state #6
From state #7
From state #8
From state #9
 [non term 11->state 18]
From state #10
 [non term 4->state 20] [non term 11->state 18]
From state #11
 [non term 8->state 21] [non term 10->state 22]
From state #12
From state #13
From state #14
From state #15
From state #16
From state #17
From state #18
From state #19
 [non term 11->state 23]
From state #20
From state #21
From state #22
From state #23
 [non term 15->state 24]
From state #24
 [non term 14->state 27]
From state #25
From state #26
 [non term 3->state 28] [non term 11->state 29]
From state #27
From state #28
From state #29
-----------------------------
